---
- name: Create messaging Service
  oc_service:
    name: messaging-internal-{{ item }}
    namespace: "{{ sa_telemetry_qdr_namespace }}"
    labels:
      app: qdr-{{ item }}
      node: "{{ item }}"
    ports:
    - name: amqp
      port: 5672
    - name: amqps
      port: 5671
    selector:
      type: router
      node: "{{ item }}"
  with_items: "{{ sa_telemetry_node_labels }}"

- name: Create external message Service
  oc_service:
    name: messaging-external-{{ item }}
    namespace: "{{ sa_telemetry_qdr_namespace }}"
    labels:
      app: qdr
      node: "{{ item }}"
    ports:
    - name: inter-router
      port: 20001
    selector:
      type: router
      node: "{{ item }}"
    external_ips:
    - "{{ sa_telemetry_qdr_external_address }}"
  with_items: "{{ sa_telemetry_node_labels }}"

- name: Create QDR ConfigMap
  oc_obj:
    name: qdrouterd-config-{{ item }}
    namespace: "{{ sa_telemetry_qdr_namespace }}"
    state: present
    kind: ConfigMap
    content:
      path: /tmp/cmout
      data: "{{ lookup('template', 'qdrouterd.conf.j2') | from_yaml }}"
  with_items: "{{ sa_telemetry_node_labels }}"

- name: Create QDR Deployment
  oc_obj:
    force: yes
    name: qdr-central-router-{{ item }}
    namespace: "{{ sa_telemetry_qdr_namespace }}"
    state: present
    kind: deployment
    content:
      path: /tmp/dout
      data: "{{ lookup('template', 'qdr-deployment.yaml.j2') | from_yaml }}"
  ignore_errors: true
  with_items: "{{ sa_telemetry_node_labels }}"

- include_tasks: routes.yml
  with_items: "{{ sa_telemetry_node_labels }}"
  loop_control:
    loop_var: node_label
